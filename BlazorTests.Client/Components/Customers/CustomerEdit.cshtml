@using BlazorTests.Shared
@layout EditLayout
@page "/customer/edit"
@page "/customer/edit/{IdAsString}"
@inherits CustomerEditComponent


<div class="card">
    <div class="card-header">
        <h1>@Title</h1>
    </div>
    <div class="card-body">

        <div class="form-group ">
            <label class="control-label col-md-2">Nom</label>
            <div class="col-md-5">
                <input class="form-control" type="text" bind=@Name />
            </div>
        </div>

        <div class="form-group ">
            <label class="control-label col-md-2">Prénom</label>
            <div class="col-md-5">
                <input class="form-control" type="text" bind=@FirstName />
            </div>
        </div>

        <div class="form-group ">
            <label class="control-label col-md-2">Type</label>
            <div class="col-md-5">
                <select class="form-control" bind="@CustomerTypeId">
                    <option value=""></option>
                    @foreach (var customerType in CustomerTypes)
                    {
                        <option value="@customerType.Id">@customerType.Text</option>
                    }
                </select>
            </div>
        </div>

    </div>

    <div class="card-footer">
        <div class="form-group float-right">
            <button input="button" class="btn btn-light" onclick="@(() => Save())">
                <span class="oi oi-check" style="color:green" aria-hidden="true"></span> Sauvegarder
            </button>
            <button input="button" class="btn btn-light" onclick="@(() => Close())">
                <span class="oi oi-x" style="color:red" aria-hidden="true"></span> Fermer
            </button>
        </div>
    </div>
    @*<button input="button" class="btn btn-light" onclick="@(() => Load())">
        Charger
    </button>
    <input type="text" value="@CustomerTypesCount"/>*@

</div>

@*@functions {

    public int CustomerTypesCount;

    public async Task Load()
    {
        CustomerTypesCount = -1;

        var customerTypes = await CustomerService.GetCustomerTypes();
        CustomerTypesCount = -2;
        if (customerTypes != null)
        {
            CustomerTypesCount = -4;
            CustomerTypesCount = customerTypes.Count();
        }
        else
        {
            CustomerTypesCount = -3;
        }
    }*@
}