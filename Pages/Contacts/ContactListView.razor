@inherits BlazorTests.Pages.PageComponentBase
@page "/contact/list"
@using BlazorTests.Data
@inject BlazorTests.Services.ContactService ContactService

<MyControl></MyControl>

<PageComponentWrapper Title="@Title">

    @if (@Contacts == null)
    {
        <p><em>Chargement en cours ...</em></p>
    }
    else
    {
        <div class="row">
            <div class="col-md-6 col-12">
                <table class="table table-sm table-bordered table-striped table-hover">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Nom</th>
                            <th>Prénom</th>
                            <th>Civilité</th>
                            <th>
                                <button type="button" class="btn btn-outline btn-xs gridColumnButton" onclick="@(() => AddContact())">
                                    <span class="fa fa-plus" aria-hidden="true"></span>
                                </button>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var contact in @Contacts)
                        {
                            <tr>
                                <td class="autoSizeToContent">@contact.Id</td>
                                <td>@contact.LastName</td>
                                <td>@contact.FirstName</td>
                                <td>@contact.CivilityText</td>
                                <td class="autoSizeToContent">
                                    <button type="button" class="btn btn-outline-success btn-xs gridColumnButton" onclick="@(() => EditContact(@contact.Id))">
                                        <span class="fa fa-pen" aria-hidden="true"></span>
                                    </button>
                                    <DeleteButton DeleteAction="@(async () => await DeleteContact(@contact.Id))"></DeleteButton>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }

    @functions {

        public IList<Contact> Contacts { get; set; }

        protected override async Task OnInitAsync()
        {
            this.Title = "Liste des contacts";
            Contacts = await ContactService.GetContacts();
        }

        public void AddContact()
        {
            UriHelper.NavigateTo(Urls.ContactAdd);
        }

        public void EditContact(int contactId)
        {
            UriHelper.NavigateTo(Urls.ContactEditFull + contactId);
        }

        public async Task DeleteContact(int contactId)
        {
            await ContactService.DeleteContact(contactId);
            this.Contacts = await ContactService.GetContacts();
            this.StateHasChanged();
        }
    }
</PageComponentWrapper>
