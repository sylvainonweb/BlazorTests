
@using Telerik.Blazor;
@using Telerik.Blazor.Components.DatePicker
@using Telerik.Blazor.Components.TimePicker
@using Telerik.Blazor.Components
@*@using Telerik.Blazor.Components.DateTimePicker*@
@using Telerik.Blazor.Components.DropDownList
@using Telerik.Blazor.Components.NumericTextBox
@using System.ComponentModel.DataAnnotations
@inject BlazorTests.Services.JsInteropService JsInteropService
@inject BlazorTests.Services.ReferenceService ReferenceService
@inject BlazorTests.Services.ContactService ContactService


<EditForm Model="@this" OnValidSubmit="@(() => Save())">

    <div class="row">
        <div class="col-2">
            TextBox :
        </div>
        <div class="col-auto">
            <TelerikTextBox @bind-Value="TextBox_Text"></TelerikTextBox>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            DropDownList :
        </div>
        <div class="col-auto">
            <TelerikDropDownList Data="@Activities" @bind-Value="DropDownList_Id" ValueField="Id" TextField="Text"
                                 DefaultItem="@DropDownList_DefaultItem"
                                 TItem="ActivityEntity" TValue="int?"></TelerikDropDownList>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            DatePicker (Date) :
        </div>
        <div class="col-auto">
            <TelerikDatePicker @bind-Value="DatePicker_Date" T="DateTime?"></TelerikDatePicker>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            DatePicker (Time) :
        </div>
        <div class="col-auto">
            <TelerikTimePicker @bind-Value="DatePicker_Time" T="DateTime?"></TelerikTimePicker>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            DatePicker (DateTime) :
        </div>
        <div class="col-auto">
            <TelerikDateTimePicker @bind-Value="DatePicker_DateTime" T="DateTime?"></TelerikDateTimePicker>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            NumericTextBox (Entier) :
        </div>
        <div class="col-auto">
            <TelerikNumericTextBox T="int?" @bind-Value="NumericTextBox_Int" Decimals="0"></TelerikNumericTextBox>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            NumericTextBox (Décimal) :
        </div>
        <div class="col-auto">
            <TelerikNumericTextBox T="decimal?" @bind-Value="NumericTextBox_Decimal" Decimals="2"></TelerikNumericTextBox>
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            Checkbox :
        </div>
        <div class="col-auto">
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            RadioButton (Actif) :
        </div>
        <div class="col-auto">
        </div>
    </div>

    <div class="row">
        <div class="col-2">
            ListBox :
        </div>
        <div class="col-auto">
        </div>
    </div>

    <div class="row">
        <div class="col-auto">
            <button type="submit">Sauvegarder</button>
        </div>
    </div>

    <div class="row">
        <div class="col-auto">
            <DataAnnotationsValidator />
            <ValidationSummary />
        </div>
    </div>

</EditForm>

@code {
    [Required]
    public string TextBox_Text { get; set; }

    [Required]
    public int? DropDownList_Id { get; set; }
    public ActivityEntity DropDownList_DefaultItem { get; set; } = new ActivityEntity { Id = -1, Text = "..." };

    [Required]
    public DateTime? DatePicker_Date { get; set; }

    [Required]
    public DateTime? DatePicker_Time { get; set; }

    [Required]
    public DateTime? DatePicker_DateTime { get; set; }

    [Required]
    public int? NumericTextBox_Int { get; set; }

    [Required]
    public decimal? NumericTextBox_Decimal { get; set; }

    [Required]
    public bool CheckBox_Checked { get; set; }

    [Required]
    public string RadioButton_Value { get; set; }

    [Required]
    public string ListBox_Value { get; set; }


    public IList<ActivityEntity> Activities { get; set; }
    public IList<Contact> Contacts { get; set; }


    protected override async Task OnInitializedAsync()
    {
        this.Activities = await ReferenceService.GetActivityEntities();
    }

    public Task Save()
    {
        return JsInteropService.ShowAlert("Sauvegarde effectuée");
    }
}
