@using Telerik.Blazor.Components

<style>
    .error {
        padding:20px;
        background: red;
        color: white;
    }
</style>

<style>
    .info {
        padding:20px;
        background: black;
        color: white;
    }
</style>

<div style="position:absolute; top: 0px;">
    <TelerikAnimationContainer @ref="myPopupRef" Width="500px" Height="150px"
                               AnimationType="AnimationType.ZoomOut" Class="@GetClass()">
        <h3><strong>@Title</strong></h3>
        <p>@Message</p>
    </TelerikAnimationContainer>
</div>

    <TelerikButton OnClick="@ToggleNotification">Afficher/ Cacher notification</TelerikButton>

    @code {
        Telerik.Blazor.Components.TelerikAnimationContainer myPopupRef;

        private string Title { get; set; }
        private string Message { get; set; }
        private bool IsErrorMessage { get; set; } = false;

        private string GetClass()
        {
            if (this.IsErrorMessage)
            {
                return "error";
            }
            else
            {
                return "info";
            }
        }

        public async void ToggleNotification()
        {
            if (this.IsErrorMessage)
            {
                this.Title = "Erreur";
                this.Message = "Ceci est un message d'erreur";
            }
            else
            {
                this.Title = "Information";
                this.Message = "Ceci est un message d'information";
            }

            myPopupRef.ShowAsync();
            this.StateHasChanged();

            await Task.Delay(3000);

            myPopupRef.HideAsync();
            this.StateHasChanged();

            this.IsErrorMessage = !this.IsErrorMessage;
        }
    }

