@page "/libraries/syncfusion"
@using Syncfusion.EJ2.RazorComponents.Grids


@*https://ej2.syncfusion.com/aspnet-core-razor-components/Calendar/DefaultFunctionalities*@
@*https://blog.syncfusion.com/post/introducing-syncfusions-asp-net-core-blazor-razor-components.aspx*@
@*nuget : Syncfusion.EJ2.AspNet.Core.RazorComponents*@

<h1>Syncfusion</h1>

<EjsGrid id="Grid" DataSource="@forecasts" AllowPaging="true" AllowSorting="true" AllowExcelExport="true" AllowFiltering="true">
        <GridColumns>
            <GridColumn Field=@nameof(WeatherForecast.Date) HeaderText="Date" Format="yMd" Type="date" Width="130"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.TemperatureC) HeaderText="Temp. (C)" Width="120"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.TemperatureF) HeaderText="Temp. (F)" Width="150"></GridColumn>
            <GridColumn Field=@nameof(WeatherForecast.Summary) HeaderText="Summary" Width="130"></GridColumn>
        </GridColumns>
    </EjsGrid>

@functions {
    WeatherForecast[] forecasts;

    protected override async Task OnInitAsync()
    {
        string[] Summaries = new[]
        {
            "Freezing", "Bracing", "Chilly", "Cool", "Mild", "Warm", "Balmy", "Hot", "Sweltering", "Scorching"
        };
        var rng = new Random();
        forecasts = await Task.FromResult(Enumerable.Range(1, 5).Select(index => new WeatherForecast
        {
            Date = DateTime.Now.AddDays(index),
            TemperatureC = rng.Next(-20, 55),
            Summary = Summaries[rng.Next(Summaries.Length)]
        }).ToArray());
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF { get; set; }
        public string Summary { get; set; }
    }
}
