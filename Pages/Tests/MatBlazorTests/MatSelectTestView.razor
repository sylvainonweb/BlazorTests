@using MatBlazor
@using System.ComponentModel.DataAnnotations
@using BlazorTests.Services
@using BlazorTests.Data
@inject BlazorTests.Services.JsInteropService JsInteropService
@inject BlazorTests.Services.ReferenceService ReferenceService




<EditForm Model="@this" OnValidSubmit="@(() => Save())">

    <div class="row">
        <div class="col-auto">
            <MatSelect Label="PickSélectionner une activité" @bind-Value="@ActivityId">
                <MatOption Value=null></MatOption>
                @foreach (var activity in @Activities)
                {
                    <MatOption Value=@activity.Id.ToString()>@activity.Text</MatOption>
                }
            </MatSelect>
        </div>
        <div class="col-auto">
            <button type="submit">Sauvegarder</button>
        </div>
    </div>

    <DataAnnotationsValidator />
    <ValidationSummary />
</EditForm>

@code {
    [Required]
    public string ActivityId { get; set; }
    public IList<ActivityEntity> Activities { get; set; }

    protected override async Task OnInitAsync()
    {
        this.Activities = await ReferenceService.GetActivityEntities();
    }

    public Task Save()
    {
        return JsInteropService.ShowAlert($"ActivityId = {ActivityId}");
    }
}
