@inherits EditablePageComponentBase
@page "/contact/add"
@page "/contact/edit/{IdAsString}"

@inject ContactService ContactService
@inject ReferenceService ReferenceService

<EditablePageComponentWrapper Title="@Title" SaveAction="@(() => Save())" CancelAction="@(() => Cancel())">


    <EditForm Model="@Contact" OnValidSubmit="@Save">
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    <label class="col-md-2 col-12">Nom :</label>
                    <InputText Class="col-md-4 col-12" bind-Value="@Contact.LastName" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    <label class="col-md-2 col-12">Prénom :</label>
                    <InputText Class="col-md-4 col-12" bind-Value="@Contact.FirstName" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="form-group">
                    <label class="col-md-2 col-12">Civilité :</label>
                    <select class="col-md-4 col-12 custom-select" bind="@Contact.CivilityId">
                        <option value=null></option>
                        @foreach (var civility in Civilities)
                        {
                            <option value=@civility.Id>@civility.Text</option>
                        }
                    </select>
                    @*<InputSelect class="col-md-4 col-12" bind-Value="@Contact.CivilityId">
            <option value=null></option>
            @foreach (var civility in Civilities)
            {
                <option value="@civility.Id">@civility.Text</option>
            }
        </InputSelect>>*@
                </div>
            </div>
        </div>

        <DataAnnotationsValidator />
        <ValidationSummary />
    </EditForm>

    @functions {

        BlazorTests.Models.Contact Contact { get; set; }
        IList<BlazorTests.Models.Civility> Civilities { get; set; }

        protected override async Task OnInitAsync()
        {
            this.Civilities = await ReferenceService.GetCivilitiesAsync();

            if (this.Id.HasValue == false)
            {
                this.Title = "Nouveau contact";
                this.Contact = new BlazorTests.Models.Contact();
            }
            else
            {
                this.Title = "Modifier un contact";
                this.Contact = await ContactService.GetContactForEdit(this.Id.Value);
            }
        }

        protected override async Task OnSave()
        {
            if (this.Id.HasValue == false)
            {
                await ContactService.AddContact(this.Contact);
                this.Id = this.Contact.Id;
            }
            else
            {
                await ContactService.UpdateContact(this.Contact);
            }

            // On redirige vers la vue complète d'un contact
            UriHelper.NavigateTo(Urls.ContactEditFull + Id);
        }

        protected override async Task OnCancel()
        {
            await ReturnToCallerPage();
        }
    }

</EditablePageComponentWrapper>